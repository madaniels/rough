What are the various type of reports 
you have developed?

I have developed Subreports, 
Parameterized reports, Drillthrough 
and Drilldown reports.

I will discuss the Parameterized, 
Subreport, and Drilldown report.

The parameterized report uses input 
values so you can vary the output of 
a report based on those input values 
that are set when the report runs.

A Parameterized report is frequently 
used in conjunction with drillthrough
reports to filter related data.

A Subreport displays inside another 
report, so it is any report within a 
report. The parent report can pass 
parameters to the subreport. A 
Dashboard report usually contains 
Subreports.

A Drilldown report contains all the 
relevant data, but it initially hides
the complexity of the dataset in the 
format of a Summary and enables the 
user to toggle the hidden report 
items to reveal the existing details.

So, both the Summary and Details are 
in the same report and can be 
accessed as desired. It is an 
hiearchy of information, moving from 
Summary to more details as more 
sections are expanded.

In a recent project I worked on, the 
technical requirement was for 4 
Dashboards, each linked to each other,
and each containing 3-4 subreports, 
where each chart is linked to a 
drill-Down report.

The Department Executive required BI 
Analytical reports on a week-to-date,
month-to-date and year-to-date basis 
so that she could manage the business
a lot better than currently. She 
wanted to know the Sales to Date for 
Total sales, the Purpose of the sale,
the sale amount breakdown and the 
Product usage.

For all these reports, I created 6 
parameters, so that the report user 
could filter the data by Report Date, 
by sale Amount, sale Purpose, Product 
Usage, Age, Marital Status, Age, and 
Sex. 

All the reports I will discuss is a 
combination of a Parameterized report
and either a subreport or drill-down 
report.

Now, of course, having the 6 
parameters means that the report user
can filter out what they want to see,
whether by Age, sale amount, sale 
Purpose, Product Usage, and so forth.

And SSRS conveniently provides the 
dropdownlists for each Parameter 
created in the report. So if the 
Report User wants to see the Sales to
Date by Age Group, she merely has to 
deselect all, and choose the Sales to
Date date and the Age Group that she 
wants to see the results of.

SQL Server in turn uses those 
selected Parameters and filters out 
the unselected values and returns a 
dataset WHERE the date equals to the 
selected date and the Age range 
equals the selected Age Group.

For the Loan To Date requirement I 
created a Loans To Date Dashboard and
this included subreports like a Pie 
Chart that shows the user the number 
of loans to Date and the number of 
loans on any given date. 

In order to fulfill the requirement 
for week-to-date, month-to-date and 
year-to-date reports, I created 3 
stacked column charts for this 
Dashboard.

From the SQL side of things, I 
created a stored procedure for 
LoansProcessed_ToDate, which 
services all 4 reports.

For the Demographics Dashboard that 
included Marital Status, Race, and 
Sex, I created 4 stacked column 
charts using the the same stored 
procedure.

For the Overview Dashboard I used 
numerous gauge, area charts, and 
3D Clustered Cylinder charts to 
compare MTD, QTD, counts by month
and quarter, as well as the 
avgerage percentage comparisons 
by month.

Finally for the Drill-Down Reports, 
I created a single Drill-Down that 
returns specific details based on 
the User's selection of YearToDate, 
MonthToDate, WeekToDate in any of the
Charts from the LTD or Demographics 
Dashboards. 

For example, if the report user 
goes to the LTD Dashboard and 
from the Drill-Through Pie Chart 
she clicks on the YearToDate slice, 
this Drill-Through Action on the 
Pie Chart, takes the user to the 
Drill-Down Report, which I setup to
initialize as a summary but upon 
toggling the + symbol, information 
about the ReportMonth, Custmer Name, 
Purchases, and Risk status is 
displayed, providing very valuable
customer related information.

So, in summary, for this project I 
developed 4 Dashboards having all 
reports use cascading Parameters, 
11 subreports that also serve as 
Drill-Through reports that drill 
through to a parameterized Drill-Down
report, that serves each subreport 
with its respective parameter 
criteria.

The Department Executive was clearly
very pleased with everything
and is now able to managed her 
department much more efficiently 
having User Friendly Dashboards and 
Reports that make available important 
business information for her disposal.

*******************************************






Hello everyone, as we all know, 
the project has taken longer than 
expected, so the Company has hired 
2 SSRS Developers from China to 
finish the project.

I will be going over what we did in
Stories 7-9 and our 2 new developers
will complete Story 10:

For Story 7, the Loan Department 
Executive required BI Analytical 
reports on a week-to-date, 
month-to-date and year-to-date 
basis so that she could manage 
the loan processing business a 
lot better than currently. 
She wanted to know the Loans to 
Date for Total loans, the 
Purpose of the loan, the Loan 
amount breakdown and the 
Property usage.

For all the reports Story 7-9, I 
created 6 parameters, so the report
user can filter the data by Report 
Date, by Loan Amount, Loan Purpose,
Property Usage, Age, Marital Status,
Age, and Sex.

Of course, having the 6 parameters 
means that the report user can 
filter out what they want to see, 
whether by Age, loan amount, Loan 
Purpose, Property Usage, and so 
forth.

For the Loan To Date requirement I 
created a Loans To Date Dashboard 
and this included subreports like a
Pie Chart that shows the user the 
number of loans to Date and the 
number of loans on any given date.

In order to fulfill the requirement
for week-to-date, month-to-date and
year-to-date reports, I created 3 
stacked column charts for this 
Dashboard.

From the SQL side of things, I 
created a stored procedure for 
LoansProcessed_ToDate, which 
services all for reports.

Story 8 was basically a continuation
of Story 7, where the Department 
Executive wanted to know the 
Loans-to-date for Demographics like
Marital Status, Race, and Sex. 
Here I created 4 stacked column 
charts using the the same 
LoansProcessed_ToDate stored 
procedure.

Story 9 was a bit more complex and 
required additional Stored 
Procedures for LoanGauges, 
LoansByMonth, LoansByQuarter, and 
the Avg Loan's Monthly Income By 
Month.

I created the Loan Overview 
Dashboard which consists of 3 
subreports, namely: 

the Gauge Subreport that shows the 
MTD vs Prior 6 Month Avg, the Last 
Mth vs Prior 6 Mth Avg, and the 
QTD vs Last Full Quarter, loans.

The Area Chart Subreport shows the 
Avg Loan and its % of Monthly 
Income By Month.

THe 3D Clustered Cylinder chart 
Subreport shows the Loan Count By 
Month and the Loan Count By 
Quarter.

So, in summary, Stories 7-9 has 
produced 3 Dashbords, the LTD 
Dashboard, the Demographics 
Dashboard, and the Overview 
Dashboard.

The LTD Dashboard shows a LTD Pie 
Chart and 3 stacked column charts 
showing the Count of Loans To Date 
by Purpose of Loan, by Property 
Usage, and by Loan Amount. 

The Demographics Dashboard has 4 
stacked column charts showing Loans
To Date by Race, Marital Status, 
Sex, and Age group.

The Overview Dashboard shows the 
MTD vs Prior 6 Month Avg, the Last 
Mth vs Prior 6 Mth Avg, and the QTD
vs Last Full Quarter, loans, the 
Avg Loan and its % of Monthly 
Income By Month, and the Loan Count
By Month and the Loan Count By 
Quarter.

I wish our new SSRS Developers well
for Story 10, the BRD will guide 
you through the process, I know 
you will succeed in completing the 
project soon.
















What is the difference between REPORT 
MANAGER and REPORT SERVER:

The Report Server defines the nature of the
installation of SQL Server Reporting 
Services.

It comes in a native and Share Point mode. 
Native mode is the default and used in 80% 
of the industry. 

The Report Server database contains all 
properties, objects and metadata related 
to an SSRS unit. So, a Report Server is the
tool that works behind the Report Manager. 
It is responsible for authentication, data 
processing, rendering and delivery options.

The Report Manager gives us the capacity to
adminsiter the Report Server.

It is the web-based interface that can be 
used to access and manage SSRS reports. The
Report Manager is not available in 
SharePoint mode.

End users can run reports from Report 
Manager, create subscriptions, and publish 
their own reports if they have permission.

In a recent project I was working on I used
the Report Manager to setup users and give 
access to specific reports to the relevent 
managers and individuals who needed to view
them.

I also setup a Subscription to send to 
certain Managers on a weekly basis. They 
needed these reports first thing on a 
Monday morning and also every Friday 
morning. The Report Manager helped me to 
set these report subscriptions up for them.


The important things to remember when setting
up Subscriptions via the Report Manager is 
to make sure the specific report and it's 
children's Data Source is correctly setup 
all with the correct Credentials. Do not 
check the "try to impersonate the user..." 
box, it will test correctly but not allow 
a new Subscription to be created, unless 
you know what you're doing. If you're 
using the "Windows File Share" option 
for the Destination of the Report, make 
sure your path is in the correct Network 
format: 
"\\ComputerName\Users\Mark\Documents", 
and once again enter the correct Credentials.

So, once again, the Report Manager basically
sits on top of the Report Server as a 
graphical user interface that helps to 
manage the Report Server which does the
behind the scenes heavy lifting.

The Report Manager is where you can create
new Data Sources, Datasets, KPI's, manage 
security, schedules, company branding, 
subscriptions, and of course, your reports.

These are some of the main differences 
between the Report Manager and Report
Server.
















Name 3 of the less common Report Items and
how you used them:

The 3 less common Report Items I have used
are the Sparkline Area chart, the Image 
item, and the Meter Gauge.

Sparklines are small, simple charts that 
convey a lot of information in a little 
space, and it is used inline with text. 
There are as many types of sparklines as 
there are regular charts, with a few 
exceptions. 

The Image is a report Item that contains 
a reference to an image. The image can be 
embedded in the report, stored in a 
database or report server, or stored 
somewhere on the Web.

The Gauge Meter is a report Item that 
depicts a single value in a dataset. Its 
shape and simplicity make it easy to read,
even when it is small and inside a table 
cell.

In a recent project I worked on, the 
requirement was to have an image for each
product, repeated with each row of data. 
This was to provide an illustration of 
each product to make it more interesting 
and perhaps provide a better understanding
of the report. The Image item was useful 
for this. In another report, I used custom
green, yellow, and red icon images to 
highlight whether a customer was least 
likely to churn (green), most likely to 
churn (red), or somewhere in the middle 
(yellow). An example of churn rate is the
rate at which customers stop subscribing 
or employees leave a job, and so forth.

Part of the same report and the 
requirement to provide as many visual 
aids as necessary to their reports, I 
used the Sparkline line chart inline with
text to help in illustrating different 
trends without having the visual aid take
up too much space in the report. I found 
this to be a very easy way to make a 
point, because it helps to emphasize and 
describe the trend as the user reads the 
report.

The Gauge Meter, helped to depict a single
KPI value to clearly illustrate the most 
important measurements of the business 
success. Senior managers love to have a 
clear indication of where the successes 
are and how they compare with other 
categories, so the Gauge Meter catered 
to this requirement without taking up a 
large amount of space on the report. In 
fact when rows are sorted by this column,
it paints an inormously clear picture of 
how the business is doing as the details 
of the report is being read.

Now, even though I have not used these 3 
items on a regular basis, I have found 
them to be enormously useful. Of course 
I could have used the Indicator gauge but
with the Image item the customer wanted 
custom images and a specific look and 
feel that suited their brand more 
appropriately.

These are 3 really great tools in the 
SSRS toolkit.

